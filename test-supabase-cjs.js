// Test simple pour v√©rifier la connexion Supabase et les propri√©t√©s
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = 'https://hqzgndjbxzgsyfoictgo.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhxemduZGpieHpnc3lmb2ljdGdvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTg3MDY5MzMsImV4cCI6MjA3NDI4MjkzM30.szs7OldmsdT9fIW59bW-r44R_VZ8roUvYeJeArK3ClM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testConnection() {
  console.log('üîç Test de connexion Supabase...');
  
  try {
    // Test 1: V√©rifier la connexion
    console.log('1Ô∏è‚É£ Test de connexion...');
    const { data, error } = await supabase
      .from('properties')
      .select('count')
      .limit(1);
    
    if (error) {
      console.error('‚ùå Erreur de connexion:', error);
      return;
    }
    
    console.log('‚úÖ Connexion r√©ussie');
    
    // Test 2: R√©cup√©rer toutes les propri√©t√©s actives
    console.log('\n2Ô∏è‚É£ R√©cup√©ration des propri√©t√©s actives...');
    const { data: properties, error: propertiesError } = await supabase
      .from('properties')
      .select('id, title, is_active')
      .eq('is_active', true);
    
    if (propertiesError) {
      console.error('‚ùå Erreur lors de la r√©cup√©ration des propri√©t√©s:', propertiesError);
      return;
    }
    
    console.log(`‚úÖ ${properties?.length || 0} propri√©t√©s actives trouv√©es:`);
    properties?.forEach((prop, index) => {
      console.log(`  ${index + 1}. ${prop.id}: ${prop.title}`);
    });
    
    // Test 3: Tester getPropertyById avec la premi√®re propri√©t√©
    if (properties && properties.length > 0) {
      const firstProperty = properties[0];
      console.log(`\n3Ô∏è‚É£ Test getPropertyById avec: ${firstProperty.id}`);
      
      const { data: property, error: propertyError } = await supabase
        .from('properties')
        .select(`
          *,
          cities:city_id (
            id,
            name,
            region
          )
        `)
        .eq('id', firstProperty.id)
        .eq('is_active', true)
        .maybeSingle();
      
      if (propertyError) {
        console.error('‚ùå Erreur lors de la r√©cup√©ration de la propri√©t√©:', propertyError);
      } else if (!property) {
        console.log('‚ùå Propri√©t√© non trouv√©e');
      } else {
        console.log('‚úÖ Propri√©t√© r√©cup√©r√©e avec succ√®s:');
        console.log(`  - Titre: ${property.title}`);
        console.log(`  - Prix: ${property.price_per_night} FCFA/nuit`);
        console.log(`  - Ville: ${property.cities?.name || 'Non d√©finie'}`);
        console.log(`  - Images: ${property.images?.length || 0} image(s)`);
        console.log(`  - √âquipements: ${property.amenities?.length || 0} √©quipement(s)`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  }
}

// Ex√©cuter le test
testConnection();
